# Form implementation generated from reading ui file 'leap_front_panel.ui'
#
# Created: Thu Dec 6 22:50:31 2012
#      by: The PerlQt User Interface Compiler (puic)
#
# WARNING! All changes made in this file will be lost!


use strict;
use utf8;


package hfpanel;
use Qt;
use Qt::isa qw(Qt::Dialog);
use Qt::slots
    startButton_clicked => [],
    buttonOk_clicked => [],
    sendSwitchMessage => ['int', 'int'],
    switch0_valueChanged => ['int'],
    switch1_valueChanged => ['int'],
    switch2_valueChanged => ['int'],
    switch3_valueChanged => ['int'],
    switch4_released => [],
    switch4_pressed => [],
    switch5_released => [],
    switch5_pressed => [],
    switch6_released => [],
    switch6_pressed => [],
    switch7_released => [],
    switch7_pressed => [],
    switch8_released => [],
    switch8_pressed => [];
use Qt::attributes qw(
    groupSwitches
    textLabel1
    textLabel2
    textLabel4
    switch1
    switch2
    switch3
    textLabel3
    switch0
    startButton
    buttonOk
    groupLEDs
    led3_on
    led2_on
    led1_on
    led0_on
    led2_off
    led1_off
    led0_off
    led6_on
    led5_on
    led4_on
    led4_off
    led6_off
    led5_off
    led3_off
    textLabel1_2
    textLabel2_2
    textLabel3_2
    textLabel4_2
    textLabel5_2
    textLabel6_2
    textLabel7_2
    textLabel8_2
    led7_on
    led7_off
    groupButtons
    switch7
    switch6
    switch5
    switch4
    switch8
);

use IO::Select;
my @ledArray;
my @switchArray;
my @switchCache;
my $scanning;

our $image0;
our $image0_data = pack 'C*',
0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x0f,
    0x08, 0x06, 0x00, 0x00, 0x00, 0x3b, 0xd6, 0x95, 0x4a, 0x00, 0x00, 0x01,
    0xa2, 0x49, 0x44, 0x41, 0x54, 0x78, 0x9c, 0xa5, 0xd3, 0x31, 0x6b, 0x1b,
    0x41, 0x14, 0x04, 0xe0, 0xef, 0xc4, 0x15, 0x7b, 0x10, 0xc3, 0x1d, 0xa8,
    0x38, 0x83, 0x8a, 0x08, 0xd2, 0xc8, 0x44, 0x85, 0x5d, 0xaa, 0x0c, 0xa4,
    0x49, 0x9f, 0x7f, 0x90, 0xca, 0xa4, 0xcd, 0xaf, 0x48, 0x6b, 0x52, 0xe5,
    0x9f, 0x04, 0x5c, 0xaa, 0x09, 0xc4, 0x85, 0x43, 0xd4, 0x18, 0x2e, 0x85,
    0x40, 0x57, 0x08, 0xee, 0xc0, 0x81, 0xdb, 0x42, 0xa0, 0x14, 0x7b, 0x02,
    0xe3, 0x32, 0xd9, 0x66, 0xb6, 0x98, 0xf7, 0xe6, 0xed, 0xbc, 0xd9, 0xcc,
    0xb3, 0x73, 0x83, 0x8e, 0xe3, 0x02, 0x2d, 0x6a, 0x6c, 0x50, 0x91, 0x7d,
    0x7c, 0xc6, 0xcd, 0x4e, 0x97, 0x6b, 0xcc, 0x39, 0x56, 0xb8, 0x44, 0x8f,
    0x79, 0x4e, 0x73, 0xa0, 0xc4, 0x5d, 0x6a, 0xaa, 0x21, 0xfb, 0xf2, 0xb4,
    0xf8, 0x1a, 0x6f, 0x38, 0xc2, 0x55, 0x19, 0x74, 0xd3, 0x60, 0x31, 0x0d,
    0xe4, 0x38, 0xd0, 0xf4, 0x51, 0xd5, 0x46, 0xeb, 0x3e, 0x82, 0xdb, 0xb1,
    0x41, 0x6e, 0x54, 0x84, 0x55, 0x1d, 0xc4, 0x57, 0xc1, 0xd5, 0x79, 0xa9,
    0x0b, 0x54, 0xa1, 0xd0, 0xc5, 0xc1, 0x45, 0x0c, 0x9a, 0x69, 0x6f, 0xf5,
    0xc0, 0xba, 0x8d, 0x27, 0x7e, 0x96, 0xdd, 0xa0, 0xe4, 0xb8, 0x2a, 0x83,
    0xfa, 0x75, 0x50, 0x2c, 0x2f, 0x09, 0x2d, 0xb3, 0x40, 0x44, 0x38, 0x67,
    0xdb, 0x10, 0x07, 0xc3, 0x7d, 0xd4, 0xff, 0xec, 0xdd, 0xf6, 0x51, 0x4f,
    0x36, 0x39, 0x99, 0xd3, 0x4d, 0x29, 0xce, 0x4b, 0xc3, 0xa9, 0x70, 0xd9,
    0xf1, 0xbe, 0x63, 0xf9, 0x8b, 0x59, 0x30, 0x84, 0x42, 0x71, 0x1e, 0xec,
    0xa6, 0x2c, 0x46, 0x53, 0x27, 0x8b, 0xd1, 0x9c, 0xc5, 0xb4, 0xe4, 0x05,
    0xc5, 0x2c, 0x70, 0xd9, 0xf1, 0x16, 0xf5, 0x2a, 0xe1, 0xb2, 0x53, 0xcc,
    0xe6, 0x84, 0xc4, 0xeb, 0xa5, 0x06, 0x93, 0x76, 0x74, 0xb5, 0xcd, 0x23,
    0x79, 0x91, 0x46, 0x9d, 0xe1, 0xf1, 0x8a, 0xb3, 0xaf, 0x09, 0x5f, 0x22,
    0xee, 0x08, 0x85, 0x36, 0x8f, 0x89, 0x8f, 0x49, 0x8d, 0xe1, 0x40, 0x7d,
    0x08, 0xc4, 0x21, 0xbd, 0xf1, 0x37, 0xce, 0x7e, 0xf0, 0xf8, 0x21, 0xe1,
    0x16, 0x01, 0x87, 0x41, 0x7d, 0x08, 0x89, 0x8f, 0xc9, 0x46, 0x12, 0xdb,
    0xec, 0x7b, 0x22, 0xc3, 0xb6, 0xe1, 0xbe, 0xe2, 0x1b, 0xda, 0x75, 0xc2,
    0xbb, 0xca, 0xb0, 0x8d, 0xfc, 0x49, 0xbc, 0x38, 0x06, 0x27, 0xaf, 0xc8,
    0xee, 0x38, 0xbe, 0xdb, 0x33, 0xec, 0xa2, 0x62, 0x2a, 0x29, 0xb9, 0xe0,
    0xfb, 0x2e, 0x29, 0x6e, 0xa3, 0x22, 0xd6, 0x86, 0xdd, 0x46, 0xb5, 0xe7,
    0x76, 0x4c, 0x5c, 0x06, 0x9f, 0x39, 0xce, 0x9f, 0xec, 0x79, 0xfe, 0x6c,
    0xcf, 0x55, 0xa4, 0xd9, 0xf5, 0xc2, 0x43, 0xb4, 0x6e, 0xa3, 0x06, 0x9f,
    0xc8, 0x72, 0x63, 0xe4, 0xe6, 0x1c, 0xd7, 0x6d, 0xb4, 0x8a, 0x74, 0xfb,
    0x5e, 0x28, 0x83, 0x21, 0xef, 0x85, 0x43, 0xd0, 0xf5, 0x91, 0x27, 0x09,
    0x6b, 0xc6, 0x64, 0xfe, 0x7f, 0xb6, 0xff, 0xf5, 0x57, 0xfd, 0x05, 0x0f,
    0x16, 0xc0, 0xf5, 0x9b, 0xf5, 0x63, 0x8a, 0x00, 0x00, 0x00, 0x00, 0x49,
    0x45, 0x4e, 0x44, 0xae, 0x42, 0x60, 0x82;

our $image1;
our $image1_data = pack 'C*',
0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x0f,
    0x08, 0x06, 0x00, 0x00, 0x00, 0x3b, 0xd6, 0x95, 0x4a, 0x00, 0x00, 0x01,
    0x1b, 0x49, 0x44, 0x41, 0x54, 0x78, 0x9c, 0x95, 0x93, 0x31, 0x6e, 0xc3,
    0x30, 0x0c, 0x45, 0x9f, 0x04, 0x0f, 0xc9, 0x66, 0x6f, 0xf1, 0x16, 0x8f,
    0xee, 0x96, 0x2b, 0x74, 0xf6, 0x11, 0x7a, 0xbc, 0x1c, 0xc1, 0x73, 0xae,
    0xd0, 0xad, 0x1e, 0xed, 0x4d, 0xd9, 0x9c, 0x2d, 0xda, 0xd4, 0xc1, 0x9f,
    0x00, 0x21, 0xa0, 0x43, 0x05, 0x10, 0x5f, 0x94, 0x3e, 0xc9, 0x2f, 0x9a,
    0x0e, 0x54, 0x6b, 0x06, 0x16, 0x28, 0x1d, 0xb0, 0x02, 0x03, 0xb0, 0x03,
    0x23, 0x84, 0xa9, 0xe2, 0x06, 0xdb, 0xdc, 0x0f, 0x72, 0x49, 0x40, 0x96,
    0xd9, 0x3a, 0xc9, 0xfa, 0x23, 0x59, 0xf8, 0xd2, 0x79, 0xb4, 0xc0, 0x0c,
    0x65, 0x01, 0xce, 0xc0, 0x0b, 0x68, 0x2b, 0x3c, 0x1f, 0x8a, 0xc8, 0x50,
    0xee, 0x0a, 0x6e, 0x50, 0x45, 0x5d, 0xb0, 0x00, 0x6f, 0x20, 0x89, 0xb0,
    0xab, 0x6a, 0x16, 0x3e, 0x80, 0x1b, 0x14, 0x20, 0xc4, 0x59, 0xc4, 0x5e,
    0x04, 0xab, 0x94, 0x85, 0x9d, 0xf0, 0xad, 0xb3, 0x5e, 0xbd, 0x98, 0x81,
    0x66, 0x81, 0x92, 0x81, 0xcd, 0x55, 0xcc, 0xda, 0x03, 0xfc, 0xb8, 0xa7,
    0x20, 0x65, 0x17, 0xe0, 0x1b, 0x4a, 0xec, 0x44, 0xbe, 0xba, 0x26, 0x59,
    0x95, 0x97, 0x4b, 0x64, 0xca, 0x2e, 0x4e, 0x41, 0x5c, 0x15, 0xb0, 0x09,
    0x2d, 0xc1, 0xcb, 0x99, 0xfa, 0x02, 0xc0, 0xd3, 0xf9, 0x71, 0x90, 0x73,
    0x15, 0x9a, 0xdf, 0x3a, 0x43, 0xcd, 0xaa, 0x79, 0x8d, 0x75, 0x73, 0x13,
    0x26, 0xbd, 0xd1, 0x07, 0x78, 0x7f, 0x93, 0xf4, 0x04, 0xc4, 0x11, 0xc2,
    0x09, 0x18, 0x45, 0x6a, 0x45, 0xfa, 0x90, 0xdf, 0xc9, 0xb7, 0xfb, 0x51,
    0xfe, 0x0d, 0x42, 0x9c, 0x24, 0x21, 0xe9, 0xd0, 0x12, 0xec, 0x2e, 0x91,
    0x7d, 0x3e, 0x53, 0x36, 0x00, 0x13, 0x1a, 0x92, 0x1e, 0x42, 0x07, 0xe5,
    0xa1, 0x8b, 0x55, 0xd2, 0x36, 0xbd, 0xf1, 0xe9, 0x0a, 0x7c, 0x1e, 0x49,
    0x02, 0x54, 0xb3, 0x9d, 0xa0, 0xac, 0xfc, 0x3d, 0xdb, 0x83, 0x0a, 0xd9,
    0x6c, 0x07, 0xaa, 0xf5, 0x9f, 0xbf, 0xea, 0x17, 0x42, 0x0b, 0x63, 0xf0,
    0x0b, 0x52, 0x53, 0xed, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44,
    0xae, 0x42, 0x60, 0x82;

our $image2;
our $image2_data = pack 'C*',
0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x0f,
    0x08, 0x06, 0x00, 0x00, 0x00, 0x3b, 0xd6, 0x95, 0x4a, 0x00, 0x00, 0x01,
    0xac, 0x49, 0x44, 0x41, 0x54, 0x78, 0x9c, 0xa5, 0xd3, 0x31, 0x6b, 0xdb,
    0x40, 0x1c, 0x05, 0xf0, 0x9f, 0x8c, 0x86, 0x13, 0x24, 0x60, 0x81, 0x87,
    0x08, 0x32, 0x58, 0x90, 0xc5, 0xa5, 0x1d, 0xec, 0xad, 0x19, 0x03, 0x5d,
    0xfa, 0x0d, 0x4a, 0xd7, 0x4e, 0xd9, 0xfb, 0x29, 0xba, 0x77, 0xca, 0x5a,
    0xfa, 0x0d, 0xb2, 0x14, 0x3c, 0x36, 0x5b, 0x3c, 0xb4, 0xd4, 0x4b, 0x40,
    0x1e, 0x02, 0xf6, 0x60, 0x90, 0x20, 0x01, 0xdd, 0x20, 0x70, 0x07, 0x29,
    0x10, 0x32, 0xb6, 0xb7, 0xbc, 0x1b, 0xde, 0xbd, 0xfb, 0xdf, 0x7b, 0xef,
    0x12, 0x2f, 0xd6, 0x15, 0xb6, 0x1c, 0xe6, 0xd8, 0x60, 0x8a, 0x15, 0x0a,
    0x92, 0x4f, 0x2f, 0xb8, 0xc9, 0xd3, 0xe6, 0x12, 0x25, 0x87, 0x1c, 0x6f,
    0xb1, 0xc3, 0x2c, 0x65, 0xdd, 0x71, 0x82, 0x1b, 0xd4, 0xa8, 0x48, 0xbe,
    0x3e, 0x3f, 0x7c, 0x89, 0xf7, 0x1c, 0x22, 0xce, 0xc7, 0xc1, 0x76, 0x12,
    0x2c, 0x26, 0x81, 0x14, 0x1d, 0x7f, 0x9a, 0xa8, 0xd8, 0x45, 0xcb, 0x26,
    0x0a, 0xb8, 0x1e, 0x04, 0x52, 0xc3, 0x8d, 0x11, 0x17, 0x27, 0x41, 0x73,
    0x16, 0x2c, 0x8a, 0xb1, 0x3a, 0x90, 0x87, 0x4c, 0x1d, 0x5b, 0xaf, 0x62,
    0x50, 0x4d, 0x1a, 0x17, 0x77, 0x2c, 0x77, 0x51, 0xc9, 0x01, 0x49, 0x72,
    0x85, 0xc0, 0xe1, 0x62, 0x1c, 0x14, 0xaf, 0x03, 0xf3, 0x73, 0xd2, 0x8a,
    0x69, 0xe0, 0x11, 0x47, 0x25, 0x9b, 0x35, 0x5d, 0xcb, 0x2a, 0xaa, 0x7f,
    0x37, 0xae, 0x9b, 0x28, 0x92, 0x8c, 0x9e, 0xcc, 0xd9, 0x4e, 0x50, 0x8c,
    0xb5, 0x69, 0xc5, 0x69, 0x60, 0x56, 0xf3, 0xa1, 0x66, 0x76, 0xcb, 0x69,
    0xd0, 0xa6, 0x19, 0x45, 0x50, 0x4d, 0x98, 0x0f, 0xa6, 0x8e, 0xe6, 0x83,
    0x39, 0x8b, 0xc9, 0x98, 0x23, 0xb2, 0x69, 0x60, 0x5e, 0xf3, 0x0e, 0x93,
    0xf3, 0x1e, 0xdf, 0xd4, 0xb2, 0xe9, 0x8c, 0xd0, 0xf3, 0x76, 0x7a, 0x81,
    0xd1, 0x66, 0x70, 0xb5, 0x4a, 0x23, 0x69, 0xd6, 0x8f, 0x3a, 0xc5, 0xc3,
    0x82, 0xe3, 0x6f, 0x3d, 0x9e, 0xe1, 0xb1, 0x22, 0x64, 0xaa, 0x34, 0x9a,
    0xa5, 0x7d, 0x8c, 0xa3, 0x29, 0x62, 0x47, 0xd9, 0x05, 0x62, 0xdb, 0xbf,
    0xf1, 0x0e, 0xc7, 0xb7, 0x3c, 0x7c, 0xec, 0x71, 0x83, 0x23, 0x74, 0xad,
    0xb2, 0x0b, 0x62, 0xd7, 0xeb, 0x8f, 0x56, 0x68, 0x71, 0xbb, 0x6f, 0x88,
    0xb4, 0x9b, 0x35, 0xbf, 0x72, 0x7e, 0x60, 0xff, 0xb3, 0xc7, 0x55, 0xae,
    0xdd, 0x44, 0x1e, 0x7b, 0x5e, 0x3b, 0x14, 0x67, 0x54, 0x90, 0xdc, 0xa0,
    0xdc, 0x63, 0x1b, 0x65, 0x5d, 0xcb, 0x7d, 0x64, 0xbd, 0xe0, 0x7b, 0xce,
    0x3a, 0xe7, 0x3e, 0xca, 0xba, 0x92, 0x6d, 0x54, 0xec, 0xfb, 0xc2, 0x14,
    0x24, 0x09, 0x7c, 0xe1, 0x50, 0x3e, 0xcb, 0xb9, 0x7c, 0x91, 0x73, 0x1e,
    0xa9, 0xb6, 0x8d, 0xf1, 0x5d, 0xb4, 0xdc, 0x45, 0x15, 0x3e, 0x93, 0xa4,
    0x86, 0xca, 0xcd, 0x38, 0x2c, 0x77, 0xd1, 0x45, 0xa4, 0xdd, 0x37, 0xf2,
    0x71, 0x20, 0x6d, 0xe4, 0x5d, 0xd0, 0x36, 0x51, 0x78, 0xd6, 0xb0, 0x6a,
    0x68, 0xe6, 0xff, 0x77, 0xfb, 0x5f, 0x7f, 0xd5, 0x5f, 0x63, 0xf0, 0xc1,
    0xbc, 0x44, 0x53, 0xc4, 0x84, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e,
    0x44, 0xae, 0x42, 0x60, 0x82;

our $image3;
our $image3_data = pack 'C*',
0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x0f,
    0x08, 0x06, 0x00, 0x00, 0x00, 0x3b, 0xd6, 0x95, 0x4a, 0x00, 0x00, 0x01,
    0x02, 0x49, 0x44, 0x41, 0x54, 0x78, 0x9c, 0x9d, 0x93, 0x21, 0x72, 0xc3,
    0x40, 0x0c, 0x45, 0x9f, 0x76, 0x0a, 0x5c, 0xe6, 0xb0, 0x9a, 0xd5, 0x30,
    0xd0, 0x30, 0x2e, 0xeb, 0x11, 0x82, 0x7b, 0x8d, 0x9e, 0xa0, 0x30, 0xd7,
    0xc8, 0x55, 0x5c, 0xba, 0xd0, 0xd0, 0xd0, 0x85, 0x61, 0x09, 0xdb, 0x02,
    0x7f, 0xcd, 0x28, 0x3b, 0x2d, 0x68, 0x35, 0xa3, 0xd1, 0xca, 0xfb, 0xbf,
    0xbe, 0x76, 0xad, 0x35, 0x2a, 0x9b, 0x80, 0x4f, 0x28, 0x3d, 0x90, 0x81,
    0x01, 0x58, 0x80, 0x11, 0xec, 0xa5, 0xc2, 0x9a, 0x2f, 0xce, 0x1b, 0xa8,
    0xac, 0xc0, 0x4d, 0xee, 0xd6, 0xc8, 0x3b, 0xa0, 0x07, 0x7b, 0xd3, 0xf7,
    0xe4, 0xc4, 0x06, 0xca, 0x2c, 0xc0, 0x65, 0x03, 0xdd, 0xc5, 0x0e, 0x98,
    0x85, 0x3b, 0x47, 0xe5, 0x0f, 0x11, 0x5d, 0xf1, 0xfa, 0x83, 0xf2, 0x63,
    0xe8, 0x60, 0x00, 0xde, 0xc1, 0xd2, 0x04, 0xac, 0xc0, 0x5e, 0x84, 0x67,
    0x29, 0xdd, 0x2a, 0x65, 0x2f, 0xb8, 0xd7, 0x1d, 0x4c, 0x80, 0x9d, 0xa4,
    0xfa, 0x25, 0x80, 0x13, 0xaf, 0x41, 0xd9, 0x55, 0x5b, 0xad, 0x9f, 0x54,
    0x34, 0xf5, 0x02, 0x0f, 0xa1, 0x55, 0x57, 0x89, 0x85, 0xbc, 0xb3, 0x18,
    0x53, 0x16, 0xc1, 0xa3, 0x17, 0xb8, 0x04, 0x8f, 0xfb, 0x73, 0xc8, 0xd3,
    0xa0, 0xa4, 0x8e, 0x6d, 0x70, 0xbf, 0xb4, 0x1a, 0xf7, 0xb0, 0x68, 0x23,
    0x2b, 0xce, 0x3a, 0x57, 0x24, 0xc4, 0x3c, 0xeb, 0xcc, 0x33, 0x90, 0x46,
    0xb0, 0x06, 0x38, 0x08, 0xd4, 0x0a, 0x34, 0x2a, 0xdf, 0x29, 0xf7, 0xfd,
    0x83, 0xf2, 0x57, 0x30, 0x03, 0x38, 0x41, 0xc9, 0xfc, 0xe3, 0x3f, 0x03,
    0x74, 0x60, 0xc7, 0xa0, 0xb0, 0xdb, 0x2a, 0xdf, 0x45, 0x57, 0x3c, 0x0a,
    0x0f, 0xd5, 0x6c, 0xaf, 0x50, 0x16, 0x7e, 0x9f, 0xed, 0x5e, 0x44, 0x9f,
    0x6d, 0xa3, 0xb2, 0xbf, 0xbc, 0xaa, 0x6f, 0x97, 0xb4, 0x59, 0x3e, 0xc1,
    0xd7, 0x1c, 0x45, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 0xae,
    0x42, 0x60, 0x82;


sub NEW
{
    shift->SUPER::NEW(@_[0..3]);

    $image0 = Qt::Pixmap();
    $image0->loadFromData($image0_data, length ($image0_data), "PNG");
    $image1 = Qt::Pixmap();
    $image1->loadFromData($image1_data, length ($image1_data), "PNG");
    $image2 = Qt::Pixmap();
    $image2->loadFromData($image2_data, length ($image2_data), "PNG");
    $image3 = Qt::Pixmap();
    $image3->loadFromData($image3_data, length ($image3_data), "PNG");

    if ( name() eq "unnamed" )
    {
        setName("hfpanel" );
    }
    setMinimumSize(Qt::Size(355, 285) );
    setMaximumSize(Qt::Size(355, 285) );


    groupSwitches = Qt::ButtonGroup(this, "groupSwitches");
    groupSwitches->setGeometry( Qt::Rect(10, 100, 100, 170) );

    textLabel1 = Qt::Label(groupSwitches, "textLabel1");
    textLabel1->setGeometry( Qt::Rect(20, 30, 16, 20) );

    textLabel2 = Qt::Label(groupSwitches, "textLabel2");
    textLabel2->setGeometry( Qt::Rect(20, 60, 16, 20) );

    textLabel4 = Qt::Label(groupSwitches, "textLabel4");
    textLabel4->setGeometry( Qt::Rect(20, 120, 16, 20) );

    switch1 = Qt::Slider(groupSwitches, "switch1");
    switch1->setGeometry( Qt::Rect(40, 60, 40, 20) );
    switch1->setMaxValue( int(1) );
    switch1->setPageStep( int(1) );
    switch1->setOrientation( &Qt::Slider::Horizontal() );

    switch2 = Qt::Slider(groupSwitches, "switch2");
    switch2->setGeometry( Qt::Rect(40, 90, 40, 20) );
    switch2->setMaxValue( int(1) );
    switch2->setPageStep( int(1) );
    switch2->setOrientation( &Qt::Slider::Horizontal() );

    switch3 = Qt::Slider(groupSwitches, "switch3");
    switch3->setGeometry( Qt::Rect(40, 120, 40, 20) );
    switch3->setMaxValue( int(1) );
    switch3->setPageStep( int(1) );
    switch3->setOrientation( &Qt::Slider::Horizontal() );

    textLabel3 = Qt::Label(groupSwitches, "textLabel3");
    textLabel3->setGeometry( Qt::Rect(20, 90, 16, 20) );

    switch0 = Qt::Slider(groupSwitches, "switch0");
    switch0->setGeometry( Qt::Rect(40, 30, 40, 20) );
    switch0->setPaletteForegroundColor( Qt::Color(0, 0, 0) );
    switch0->setMaxValue( int(1) );
    switch0->setPageStep( int(1) );
    switch0->setOrientation( &Qt::Slider::Horizontal() );

    my $LayoutWidget = Qt::Widget(this, '$LayoutWidget');
    $LayoutWidget->setGeometry( Qt::Rect(270, 190, 75, 76) );
    my $Control = Qt::VBoxLayout($LayoutWidget, 11, 6, '$Control');

    startButton = Qt::PushButton($LayoutWidget, "startButton");
    startButton->setAutoDefault( 0 );
    $Control->addWidget(startButton);

    buttonOk = Qt::PushButton($LayoutWidget, "buttonOk");
    buttonOk->setAutoDefault( 0 );
    $Control->addWidget(buttonOk);

    groupLEDs = Qt::ButtonGroup(this, "groupLEDs");
    groupLEDs->setGeometry( Qt::Rect(10, 10, 270, 80) );

    led3_on = Qt::Label(groupLEDs, "led3_on");
    led3_on->setGeometry( Qt::Rect(140, 30, 16, 16) );
    led3_on->setPixmap( $image0 );
    led3_on->setScaledContents( 1 );

    led2_on = Qt::Label(groupLEDs, "led2_on");
    led2_on->setGeometry( Qt::Rect(170, 30, 16, 16) );
    led2_on->setPixmap( $image0 );
    led2_on->setScaledContents( 1 );

    led1_on = Qt::Label(groupLEDs, "led1_on");
    led1_on->setGeometry( Qt::Rect(200, 30, 16, 16) );
    led1_on->setPixmap( $image0 );
    led1_on->setScaledContents( 1 );

    led0_on = Qt::Label(groupLEDs, "led0_on");
    led0_on->setGeometry( Qt::Rect(230, 30, 16, 16) );
    led0_on->setPixmap( $image0 );
    led0_on->setScaledContents( 1 );

    led2_off = Qt::Label(groupLEDs, "led2_off");
    led2_off->setGeometry( Qt::Rect(170, 30, 16, 16) );
    led2_off->setPixmap( $image1 );
    led2_off->setScaledContents( 1 );

    led1_off = Qt::Label(groupLEDs, "led1_off");
    led1_off->setGeometry( Qt::Rect(200, 30, 16, 16) );
    led1_off->setPixmap( $image1 );
    led1_off->setScaledContents( 1 );

    led0_off = Qt::Label(groupLEDs, "led0_off");
    led0_off->setGeometry( Qt::Rect(230, 30, 16, 16) );
    led0_off->setPixmap( $image1 );
    led0_off->setScaledContents( 1 );

    led6_on = Qt::Label(groupLEDs, "led6_on");
    led6_on->setGeometry( Qt::Rect(50, 30, 16, 16) );
    led6_on->setPixmap( $image2 );
    led6_on->setScaledContents( 1 );

    led5_on = Qt::Label(groupLEDs, "led5_on");
    led5_on->setGeometry( Qt::Rect(80, 30, 16, 16) );
    led5_on->setPixmap( $image2 );
    led5_on->setScaledContents( 1 );

    led4_on = Qt::Label(groupLEDs, "led4_on");
    led4_on->setGeometry( Qt::Rect(110, 30, 16, 16) );
    led4_on->setPixmap( $image2 );
    led4_on->setScaledContents( 1 );

    led4_off = Qt::Label(groupLEDs, "led4_off");
    led4_off->setGeometry( Qt::Rect(110, 30, 16, 16) );
    led4_off->setPixmap( $image3 );
    led4_off->setScaledContents( 1 );

    led6_off = Qt::Label(groupLEDs, "led6_off");
    led6_off->setGeometry( Qt::Rect(50, 30, 16, 16) );
    led6_off->setPixmap( $image3 );
    led6_off->setScaledContents( 1 );

    led5_off = Qt::Label(groupLEDs, "led5_off");
    led5_off->setGeometry( Qt::Rect(80, 30, 16, 16) );
    led5_off->setPixmap( $image3 );
    led5_off->setScaledContents( 1 );

    led3_off = Qt::Label(groupLEDs, "led3_off");
    led3_off->setGeometry( Qt::Rect(140, 30, 16, 16) );
    led3_off->setPixmap( $image1 );
    led3_off->setScaledContents( 1 );

    textLabel1_2 = Qt::Label(groupLEDs, "textLabel1_2");
    textLabel1_2->setGeometry( Qt::Rect(230, 50, 20, 21) );
    textLabel1_2->setAlignment( int(&Qt::Label::AlignCenter) );

    textLabel2_2 = Qt::Label(groupLEDs, "textLabel2_2");
    textLabel2_2->setGeometry( Qt::Rect(200, 50, 16, 20) );
    textLabel2_2->setAlignment( int(&Qt::Label::AlignCenter) );

    textLabel3_2 = Qt::Label(groupLEDs, "textLabel3_2");
    textLabel3_2->setGeometry( Qt::Rect(170, 50, 16, 20) );
    textLabel3_2->setAlignment( int(&Qt::Label::AlignCenter) );

    textLabel4_2 = Qt::Label(groupLEDs, "textLabel4_2");
    textLabel4_2->setGeometry( Qt::Rect(140, 50, 16, 20) );
    textLabel4_2->setAlignment( int(&Qt::Label::AlignCenter) );

    textLabel5_2 = Qt::Label(groupLEDs, "textLabel5_2");
    textLabel5_2->setGeometry( Qt::Rect(110, 50, 20, 21) );
    textLabel5_2->setAlignment( int(&Qt::Label::AlignCenter) );

    textLabel6_2 = Qt::Label(groupLEDs, "textLabel6_2");
    textLabel6_2->setGeometry( Qt::Rect(80, 50, 16, 20) );
    textLabel6_2->setAlignment( int(&Qt::Label::AlignCenter) );

    textLabel7_2 = Qt::Label(groupLEDs, "textLabel7_2");
    textLabel7_2->setGeometry( Qt::Rect(50, 50, 16, 20) );
    textLabel7_2->setAlignment( int(&Qt::Label::AlignCenter) );

    textLabel8_2 = Qt::Label(groupLEDs, "textLabel8_2");
    textLabel8_2->setGeometry( Qt::Rect(20, 50, 16, 20) );
    textLabel8_2->setAlignment( int(&Qt::Label::AlignCenter) );

    led7_on = Qt::Label(groupLEDs, "led7_on");
    led7_on->setGeometry( Qt::Rect(20, 30, 16, 16) );
    led7_on->setPixmap( $image2 );
    led7_on->setScaledContents( 1 );

    led7_off = Qt::Label(groupLEDs, "led7_off");
    led7_off->setGeometry( Qt::Rect(20, 30, 16, 16) );
    led7_off->setPixmap( $image3 );
    led7_off->setScaledContents( 1 );

    groupButtons = Qt::ButtonGroup(this, "groupButtons");
    groupButtons->setGeometry( Qt::Rect(120, 100, 140, 170) );

    switch7 = Qt::PushButton(groupButtons, "switch7");
    switch7->setGeometry( Qt::Rect(90, 70, 40, 40) );
    switch7->setAutoDefault( 0 );

    switch6 = Qt::PushButton(groupButtons, "switch6");
    switch6->setGeometry( Qt::Rect(50, 70, 40, 40) );
    switch6->setAutoDefault( 0 );

    switch5 = Qt::PushButton(groupButtons, "switch5");
    switch5->setGeometry( Qt::Rect(10, 70, 40, 40) );
    switch5->setAutoDefault( 0 );

    switch4 = Qt::PushButton(groupButtons, "switch4");
    switch4->setGeometry( Qt::Rect(50, 30, 40, 40) );
    switch4->setAutoDefault( 0 );

    switch8 = Qt::PushButton(groupButtons, "switch8");
    switch8->setGeometry( Qt::Rect(50, 110, 40, 40) );
    switch8->setAutoDefault( 0 );
    languageChange();
    my $resize = Qt::Size(355, 285);
    $resize = $resize->expandedTo(minimumSizeHint());
    resize( $resize );
    clearWState( &Qt::WState_Polished );

    Qt::Object::connect(buttonOk, SIGNAL "clicked()", this, SLOT "accept()");
    Qt::Object::connect(startButton, SIGNAL "clicked()", this, SLOT "startButton_clicked()");
    Qt::Object::connect(buttonOk, SIGNAL "clicked()", this, SLOT "buttonOk_clicked()");
    Qt::Object::connect(switch0, SIGNAL "valueChanged(int)", this, SLOT "switch0_valueChanged(int)");
    Qt::Object::connect(switch1, SIGNAL "valueChanged(int)", this, SLOT "switch1_valueChanged(int)");
    Qt::Object::connect(switch2, SIGNAL "valueChanged(int)", this, SLOT "switch2_valueChanged(int)");
    Qt::Object::connect(switch3, SIGNAL "valueChanged(int)", this, SLOT "switch3_valueChanged(int)");
    Qt::Object::connect(switch4, SIGNAL "pressed()", this, SLOT "switch4_pressed()");
    Qt::Object::connect(switch4, SIGNAL "released()", this, SLOT "switch4_released()");
    Qt::Object::connect(switch5, SIGNAL "released()", this, SLOT "switch5_released()");
    Qt::Object::connect(switch5, SIGNAL "pressed()", this, SLOT "switch5_pressed()");
    Qt::Object::connect(switch6, SIGNAL "released()", this, SLOT "switch6_released()");
    Qt::Object::connect(switch6, SIGNAL "pressed()", this, SLOT "switch6_pressed()");
    Qt::Object::connect(switch7, SIGNAL "released()", this, SLOT "switch7_released()");
    Qt::Object::connect(switch7, SIGNAL "pressed()", this, SLOT "switch7_pressed()");
    Qt::Object::connect(switch8, SIGNAL "released()", this, SLOT "switch8_released()");
    Qt::Object::connect(switch8, SIGNAL "pressed()", this, SLOT "switch8_pressed()");

    init();
}


#  Sets the strings of the subwidgets using the current
#  language.

sub languageChange
{
    setCaption(trUtf8("Leap Front Panel") );
    groupSwitches->setTitle( trUtf8("Switches") );
    textLabel1->setText( trUtf8("0") );
    textLabel2->setText( trUtf8("1") );
    textLabel4->setText( trUtf8("3") );
    textLabel3->setText( trUtf8("2") );
    startButton->setText( trUtf8("Start") );
    startButton->setAccel( Qt::KeySequence( "" ) );
    buttonOk->setText( trUtf8("E&xit") );
    buttonOk->setAccel( Qt::KeySequence( trUtf8("Alt+X") ) );
    groupLEDs->setTitle( trUtf8("LEDs") );
    textLabel1_2->setText( trUtf8("0") );
    textLabel2_2->setText( trUtf8("1") );
    textLabel3_2->setText( trUtf8("2") );
    textLabel4_2->setText( trUtf8("3") );
    textLabel5_2->setText( trUtf8("4") );
    textLabel6_2->setText( trUtf8("5") );
    textLabel7_2->setText( trUtf8("6") );
    textLabel8_2->setText( trUtf8("7") );
    groupButtons->setTitle( trUtf8("Buttons") );
    switch7->setText( trUtf8("RT") );
    switch6->setText( trUtf8("OK") );
    switch5->setText( trUtf8("LT") );
    switch4->setText( trUtf8("UP") );
    switch8->setText( trUtf8("DN") );
}


sub init
{

    $scanning = 0;
    
    $ledArray[0] = led0_off;
    $ledArray[1] = led1_off;
    $ledArray[2] = led2_off;
    $ledArray[3] = led3_off;
    $ledArray[4] = led4_off;
    $ledArray[5] = led5_off;
    $ledArray[6] = led6_off;
    $ledArray[7] = led7_off;

    $switchArray[0] = switch0;
    $switchArray[1] = switch1;
    $switchArray[2] = switch2;
    $switchArray[3] = switch3;
    $switchArray[4] = switch4;
    $switchArray[5] = switch5;
    $switchArray[6] = switch6;
    $switchArray[7] = switch7;
    $switchArray[8] = switch8;

    my $string_of_32_zeroes = "00000000000000000000000000000000";
    @switchCache = split(//, $string_of_32_zeroes);

    # disable all input controls except Start button
    groupSwitches->setEnabled(0);
    groupButtons->setEnabled(0);
    groupLEDs->setEnabled(0);

    $| = 1;

}

sub startButton_clicked
{

    my $timeout = 0.001;
    my $a = Qt::app();
    
    # sanity check
    if ($scanning eq 1)
    {
        die "invalid state: 1\n";
    }
        
    # enable dialog controls... do we need an atomic
    # condition variable here?
    $scanning = 1;

    startButton->setEnabled(0);
    groupSwitches->setEnabled(1);
    groupButtons->setEnabled(1);
    groupLEDs->setEnabled(1);
        
    # start scanning inputs
    my $sel = new IO::Select;
    $sel->add(\*STDIN);

    # flush all junk from STDIN
    # while ($sel->can_read($timeout))
    # {
    #    my $junk;
    #    read(STDIN, $junk, 1);
    # }
        
    # enter scan loop
    while ($scanning eq 1)
    {
        # scan for events
        if ($sel->can_read($timeout))
        {
            # incoming!
            my $data;
            read(STDIN, $data, 32);

            # update LED state: be careful about endian-ness!
            for (my $led = 0; $led < 8; $led = $led + 1)
            {
                # in our dialog box, the off-state LED is on top,
                # so to switch "on" the LED, we need to hide the
                # off-state pixmap, and to switch it "off", we need
                # to reveal the off-state pixmap
                if (substr($data, $led, 1) eq '0')
                {
                    $ledArray[$led]->show();
                }
                else
                {
                    $ledArray[$led]->hide();
                }
            }
        }
            
        # ugh, this is really ugly: manually ask
        # application to process events so that event
        # loop is alive. It is theoretically possible
        # for more than one instance of this loop to
        # be running simultaneously, but it is extremely
        # unlikely, and even if this happens, there
        # aren't any critical race conditions (I think).
          
        $a->processEvents();
    }
        
    # we've come out of the scan loop, perform cleanup

}

sub buttonOk_clicked
{

    # check if scan loop is running
    if ($scanning eq 0)
    {
        # nothing to do, simply exit
    }
    else
    {
        # set flag to come out of scan loop
        $scanning = 0;
    }

    # note: accept() will be called after this method ends,
    # which will cause the app to terminate

}

sub sendSwitchMessage
{

    # construct string and print it out
    $switchCache[$_[0]] = $_[1];

    print STDOUT @switchCache;

    #print STDOUT "$_[0] $_[1]\n";

}

sub switch0_valueChanged
{

    sendSwitchMessage(0, $_[0]);

}

sub switch1_valueChanged
{

    sendSwitchMessage(1, $_[0]);

}

sub switch2_valueChanged
{

    sendSwitchMessage(2, $_[0]);

}

sub switch3_valueChanged
{

    sendSwitchMessage(3, $_[0]);

}

sub switch4_released
{

    sendSwitchMessage(4, 0);

}

sub switch4_pressed
{

    sendSwitchMessage(4, 1);

}

sub switch5_released
{

    sendSwitchMessage(5, 0);

}

sub switch5_pressed
{

    sendSwitchMessage(5, 1);

}

sub switch6_released
{

    sendSwitchMessage(6, 0);

}

sub switch6_pressed
{

    sendSwitchMessage(6, 1);

}

sub switch7_released
{

    sendSwitchMessage(7, 0);

}

sub switch7_pressed
{

    sendSwitchMessage(7, 1);

}

sub switch8_released
{

    sendSwitchMessage(8, 0);

}

sub switch8_pressed
{

    sendSwitchMessage(8, 1);

}

1;


package main;

use Qt;
use hfpanel;

my $a = Qt::Application(\@ARGV);
my $w = hfpanel;
$a->setMainWidget($w);
$w->show;
exit $a->exec;
